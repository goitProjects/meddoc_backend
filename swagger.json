{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "API 1.0.0",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3017"
    },
    {
      "url": "https://meddoc-backend.p.goit.global/"
    }
  ],
  "tags": [
    {
      "name": "UserAuth",
      "description": "Authorization  endpoints"
    },
    {
      "name": "UserInfo",
      "description": "Info endpoints"
    },
    {
      "name": "Experience",
      "description": "Experience endpoints"
    },
    {
      "name": "Appointment",
      "description": "Appointment endpoints"
    },
    {
      "name": "Colleague",
      "description": "Colleague endpoints"
    },
    {
      "name": "Analyze",
      "description": "Colleague endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice endpoints"
    },
    {
      "name": "Pet",
      "description": "Pet endpoints"
    },
    {
      "name": "Sponsors-info",
      "description": "Sponsors-info endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "UserAuth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "User with phone +3809739345678 already exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "UserAuth"
        ],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email doesn't exist / Password is wrong",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "UserAuth"
        ],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "tags": [
          "UserAuth"
        ],
        "summary": "Refresh Tokens",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRefreshTokensResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Get current user  info",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/info/{id}": {
      "get": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Get user {id} info",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/info/all/{role}": {
      "get": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Get all users {role} ",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "role",
            "required": true,
            "description": "The Notice role"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllUsersWhithRole"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/info/update/image": {
      "put": {
        "tags": [
          "UserInfo"
        ],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "multipart/form-data:": {
              "schema": {
                "type": "object",
                "properties": {
                  "userImgUrl": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update user image info",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/info/update": {
      "patch": {
        "tags": [
          "UserInfo"
        ],
        "summary": "Update user info",
        "parameters": [],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserInfo"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserInfo"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/experience": {
      "get": {
        "tags": [
          "Experience"
        ],
        "summary": "Get current doctor list of Experience",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllExperience"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Experience"
        ],
        "summary": "create user experience",
        "parameters": [],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserExperienceRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserExperienceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/experience/{id}": {
      "get": {
        "tags": [
          "Experience"
        ],
        "summary": "Get {id} doctor list of Experience",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Experience"
        ],
        "summary": "Update user experience",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCurrentUserExperienceRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCurrentUserExperienceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Experience"
        ],
        "summary": "delete {id} from list of Experience",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/experience/update/image/{id}": {
      "put": {
        "tags": [
          "Experience"
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "multipart/form-data:": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update by {id} Experience image ",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAppointmentRes"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get one notice",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppointments"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get one notice",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAppointmentReq"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAppointmentRes"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Get one notice",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAppointment"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Appointment"
        ],
        "summary": "update one Appointment by {id}",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Appointment ID"
          }
        ],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAppointmentReq"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAppointmentRes"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "summary": "delete Appointment {id}",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "delete Appointment {id}"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/colleague": {
      "get": {
        "tags": [
          "Colleague"
        ],
        "summary": "Get one notice",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Colleague"
        ],
        "summary": "Get one notice",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/colleague/{id}": {
      "get": {
        "tags": [
          "Colleague"
        ],
        "summary": "Get colleague by  owner{id}",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Colleague"
        ],
        "summary": "update one Colleague by _id",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The  Colleague ID"
          }
        ],
        "requestBody": {
          "description": "Update's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCurrentUserColleagueRequest"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Colleague"
        ],
        "summary": "Get one notice",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "put": {
        "tags": [
          "Analyze"
        ],
        "summary": "Get one notice",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Analyze"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Get one notice",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/analyze/{id}": {
      "get": {
        "tags": [
          "Analyze"
        ],
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "summary": "Get one notice",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Analyze"
        ],
        "summary": "Get one notice",
        "parameters": [
          {
            "in": "path",
            "schema": {
              "type": "string"
            },
            "name": "id",
            "required": true,
            "description": "The Notice ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNotice"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "role",
          "phone",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User1"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "example": "doctor"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "3809739345679"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "role": {
            "type": "string",
            "description": "User's role"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User's accessToken"
              },
              "refreshToken": {
                "type": "string",
                "description": "User's refreshToken"
              }
            }
          }
        },
        "example": {
          "success": true,
          "message": "Successfully created new user. You can Login",
          "user": {
            "name": "Shumeiko Timur Bohdanovich",
            "phone": "+3809739345578",
            "role": "doctor",
            "data": {
              "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZkNjdhMGU1YWRjY2JmNGViM2UxZCIsImlhdCI6MTY4MTkwNTI3NSwiZXhwIjoxNjgxOTc3Mjc1fQ.K2wghJEPvKBk-8zuOW1P05lwxucPH6obuSgkOiQpY1s",
              "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZkNjdhMGU1YWRjY2JmNGViM2UxZCIsImlhdCI6MTY4MTkwNTI3NSwiZXhwIjoxNjg0NDk3Mjc1fQ.T2FwTxqST4pXXcB1hCj8NGEO_idcAsRxZA103LzQmP4"
            }
          }
        }
      },
      "LoginRequest": {
        "required": [
          "phone",
          "password"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "3809739345679",
            "format": "3809739345679"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "phone": {
            "type": "string",
            "description": "User's phone"
          },
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User's accessToken"
              },
              "refreshToken": {
                "type": "string",
                "description": "User's refreshToken"
              }
            }
          }
        },
        "example": {
          "id": "643fcb52024091f380863625",
          "name": "Shumeiko Timur Bohdanovich",
          "phone": "+3809739345678",
          "role": "doctor",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZjYjUyMDI0MDkxZjM4MDg2MzYyNSIsImlhdCI6MTY4MTkwMjQ3MywiZXhwIjoxNjgzNjMwNDczfQ.BH_Pn9E1ppEQQfHCgX2ThqHw4R_GFtLyv1Y-4Qo1ttQ",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZjYjUyMDI0MDkxZjM4MDg2MzYyNSIsImlhdCI6MTY4MTkwMjQ3MywiZXhwIjoxNjg0NDk0NDczfQ.3KDPpgXwl892kEFJSsTH5AJRWgTwUmR1SpJ2UOFhkv8"
          }
        }
      },
      "UserRefreshTokensResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "User's accessToken"
              },
              "refreshToken": {
                "type": "string",
                "description": "User's refreshToken"
              }
            }
          }
        },
        "example": {
          "status": "success",
          "data": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZjYjUyMDI0MDkxZjM4MDg2MzYyNSIsImlhdCI6MTY4MTkwNjM3MSwiZXhwIjoxNjgxOTc4MzcxfQ.MRj8WEF1HstHop6N6M8j6ChQApT7hqnZjzJo4dCgvz0",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0M2ZjYjUyMDI0MDkxZjM4MDg2MzYyNSIsImlhdCI6MTY4MTkwNjM3MSwiZXhwIjoxNjg0NDk4MzcxfQ.Gu80GJyOGUrrS_a690wlM6fmYwW-OU1G8barf4maYF4"
          }
        }
      },
      "GetUserInfo": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "balance": {
                "type": "number",
                "description": "User's balance"
              }
            }
          }
        },
        "example": {
          "_id": "642ae9da4ef91590895d8b7b",
          "name": "Shumeiko Timur Bohdanovich",
          "phone": "3809739345679",
          "role": "doctor",
          "coast": 200,
          "about": "Hi, I'm Shumeiko Timur Bohdanovich, a highly skilled surgeon with 8 years of experience in to surgeons. I am committed to providing the highest level of care to my patients and am dedicated to helping them achieve better health and quality of life through surgical interventions. I am passionate about my work and am constantly seeking new and innovative ways to improve patient outcomes and quality of care. Thank you for considering me as your surgeon.",
          "specialization": "Surgeon",
          "category": "higer",
          "gender": "male",
          "birthday": "2023-04-03",
          "userImgUrl": "https://res.cloudinary.com/nafin13/image/upload/v1681153859/jxzajax5uftqzzyimh5r.png"
        }
      },
      "GetAllUsersWhithRole": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "patient": {
              "type": "string"
            },
            "doctor": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "rating": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "643fcb52024091f380863625",
            "name": "Shumeiko Timur Bohdanovich",
            "phone": "+3809739345678",
            "role": "doctor"
          },
          {
            "_id": "643fd67a0e5adccbf4eb3e1d",
            "name": "Shumeiko Timur Bohdanovich",
            "phone": "+3809739345578",
            "role": "doctor",
            "coast": 200,
            "about": "Hi, I'm Shumeiko Timur Bohdanovich, a highly skilled surgeon with 8 years of experience in to surgeons. I am committed to providing the highest level of care to my patients and am dedicated to helping them achieve better health and quality of life through surgical interventions. I am passionate about my work and am constantly seeking new and innovative ways to improve patient outcomes and quality of care. Thank you for considering me as your surgeon.",
            "specialization": "Surgeon",
            "category": "higer",
            "gender": "male",
            "birthday": "2023-04-03",
            "userImgUrl": "https://res.cloudinary.com/nafin13/image/upload/v1681153859/jxzajax5uftqzzyimh5r.png",
            "rating": []
          }
        ]
      },
      "UploadImageResponse": {
        "type": "object",
        "properties": {
          "coast": {
            "type": "string"
          },
          "about": {
            "type": "string"
          },
          "specialization": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "userImgUrl": {
            "type": "string"
          },
          "rating": {
            "type": "string"
          }
        },
        "example": {
          "_id": "643fd67a0e5adccbf4eb3e1d",
          "name": "Shumeiko Timur Bohdanovich",
          "phone": "+3809739345578",
          "role": "doctor",
          "coast": 200,
          "about": "Hi, I'm Shumeiko Timur Bohdanovich, a highly skilled surgeon with 8 years of experience in to surgeons. I am committed to providing the highest level of care to my patients and am dedicated to helping them achieve better health and quality of life through surgical interventions. I am passionate about my work and am constantly seeking new and innovative ways to improve patient outcomes and quality of care. Thank you for considering me as your surgeon.",
          "specialization": "Surgeon",
          "category": "higer",
          "gender": "male",
          "birthday": "2023-04-03",
          "userImgUrl": "https://res.cloudinary.com/nafin13/image/upload/v1681153859/jxzajax5uftqzzyimh5r.png",
          "rating": []
        }
      },
      "UpdateUserExperienceRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "educational institution"
          },
          "description": {
            "type": "string",
            "description": "description educational institution"
          },
          "start": {
            "type": "string",
            "description": "data start"
          },
          "end": {
            "type": "string",
            "description": "data end"
          }
        },
        "example": {
          "title": "Basic medical sciences",
          "description": "The basic medical sciences look at the molecular, cellular, and systems organization of the human body and the biological mechanisms it uses to adapt to environmental changes and disease.",
          "start": "2021-03-03T00:00:00.000+00:00",
          "end": "2020-03-02T22:00:00.000+00:00"
        }
      },
      "UpdateUserExperienceResponse": {
        "type": "object",
        "properties": {
          "owner:": {
            "type": "string",
            "description": "Id owner experience"
          },
          "ImgUrl": {
            "type": "string",
            "description": "img document"
          },
          "title": {
            "type": "string",
            "description": "educational institution"
          },
          "description": {
            "type": "string",
            "description": "description educational institution"
          },
          "start": {
            "type": "string",
            "description": "data start"
          },
          "end": {
            "type": "string",
            "description": "data end"
          }
        },
        "example": {
          "owner": "642ae9da4ef91590895d8b7b",
          "ImgUrl": "https://res.cloudinary.com/nafin13/image/upload/v1680725876/jlqv56ojibl8wjtuyg2a.png",
          "title": "Basic medical sciences",
          "description": "The basic medical sciences look at the molecular, cellular, and systems organization of the human body and the biological mechanisms it uses to adapt to environmental changes and disease.",
          "start": "2021-03-03T00:00:00.000+00:00",
          "end": "2020-03-02T22:00:00.000+00:00"
        }
      },
      "GetAppointment": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "patient": {
              "type": "string"
            },
            "doctor": {
              "type": "string"
            },
            "date": {
              "type": "string"
            }
          }
        },
        "example": {
          "_id": "642fe9e82510b50890683954",
          "patient": "642fe9e82510b50890683954",
          "doctor": "642ae9da4ef91590895d8b7b",
          "date": "2001-10-02T21:00:00.000Z"
        }
      },
      "GetAppointments": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "patient": {
              "type": "string"
            },
            "doctor": {
              "type": "string"
            },
            "date": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "_id": "642fe9e82510b50890683954",
            "patient": "642fe9e82510b50890683954",
            "doctor": "642ae9da4ef91590895d8b7b",
            "date": "2001-10-02T21:00:00.000Z"
          }
        ]
      },
      "AddAppointmentReq": {
        "type": "object",
        "required": [
          "opponent",
          "date"
        ],
        "properties": {
          "opponent": {
            "type": "string",
            "description": "opponent {id}",
            "example": "642fe9e82510b50890683954"
          },
          "date": {
            "type": "string",
            "description": "date Appointment",
            "example": "2002-10-02T21:00:00.000Z"
          }
        }
      },
      "AddAppointmentRes": {
        "type": "object",
        "properties": {
          "acknowledged": {
            "type": "string",
            "example": true
          },
          "insertedId": {
            "type": "string",
            "example": "6439206309faa09eaf44c15e"
          }
        }
      },
      "UpdateCurrentUserColleagueRequest": {
        "properties": {
          "colleague": {
            "type": "string",
            "example": "6439206309faa09eaf44c15e"
          }
        }
      },
      "GetAllNotice": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "notice": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "birthday": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "sex": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "imageUrl": {
                  "type": "string"
                },
                "userEmail": {
                  "type": "string"
                },
                "userPhone": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                }
              }
            }
          },
          "category": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "success": true,
          "message": "found notice data with this user ID",
          "notice": [],
          "category": [
            "lost-found",
            "for-free",
            "sell"
          ]
        }
      },
      "GetOneNotice": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "notice": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "type_of_pet": {
                  "type": "string"
                },
                "animals_photos": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "userContacts": {
                  "type": "string"
                },
                "price": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                }
              }
            }
          }
        },
        "example": {
          "success": true,
          "message": "Data found with this ID",
          "notice": [
            {
              "_id": "63029a9e67447e95c6d80cee",
              "type_of_pet": "shinshila",
              "animals_photos": "https://res.cloudinary.com/nafin13/image/upload/v1661115037/ow7dsa4ifrr7ubnwqtj7.jpg",
              "district": "shinshila",
              "description": "shinshila",
              "userContacts": "Kiev, Nafanya, +3.....111111",
              "price": "12366",
              "owner": "62ff62db76172b42dd276f3a",
              "category": "Sell",
              "createdAt": "2022-08-21T20:50:38.508Z",
              "updatedAt": "2022-08-21T20:50:38.508Z",
              "__v": 0
            },
            {
              "_id": "63029a9e67447e95c6d81cee",
              "type_of_pet": "shinshila1",
              "animals_photos": "https://res.cloudinary.com/nafin13/image/upload/v1661115037/ow7dsa4ifrr7ubnwqtj7.jpg",
              "district": "shinshila",
              "description": "shinshila1",
              "userContacts": "Kiev, Nafanya, +3.....111111",
              "price": "12366",
              "owner": "62ff62db76172b42dd276f3a",
              "category": "Sell",
              "createdAt": "2022-08-21T20:50:38.508Z",
              "updatedAt": "2022-08-21T20:50:38.508Z",
              "__v": 0
            }
          ]
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User not found"
          }
        },
        "description": "Bad Request"
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal Server Error..."
          }
        },
        "description": "Internal Server Error"
      },
      "ServiceUnavailable": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Service Unavailable..."
          }
        },
        "description": "Service Unavailable"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}